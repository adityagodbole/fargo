grammar Fargo.Scheme
  
  program   <- shebang? cell* <Fargo.Scheme.Program>
  
  shebang   <- space* "#!" (![\n\r] .)*
  
  cell      <- ignore quote cell <Fargo.Scheme.QuotedCell>
             / ignore (list / vector / atom) ignore <Fargo.Scheme.Cell>
  
  quote     <- "'" / "`" / ",@" / ","
  
  list      <- "(" cells ")" <Fargo.Scheme.List>
  
  cells     <- cell+ dot:"." space cell / cell*
  
  vector    <- "#(" cell* ")"
  
  atom      <- datum / symbol
  
  datum     <- (boolean / number / character / string) !(!reserved .) <Fargo.Scheme.Datum>
  
  boolean   <- "#" [tf] <Fargo.Scheme.Boolean>
  
  number    <- "-"? ("0" / [1-9] [0-9]*) ("." [0-9]+)? <Fargo.Scheme.Number>
  
  character <- "#\\" glyph:(symbol / .)
  
  string    <- "\"" ("\\\"" / [^"])* "\"" <Fargo.Scheme.String>
  
  symbol    <- ((!delimiter .) (!delimiter .)+ / (!reserved .)) <Fargo.Scheme.Symbol>
  
  reserved  <- "." / delimiter
  
  delimiter <- quote / "#" / [()] / space
  
  space     <- [\s\n\r\t]
  
  ignore    <- space* (comment ignore)?
  
  comment   <- ";" (![\n\r] .)*
